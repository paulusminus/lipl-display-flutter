// This file initializes the dynamic library and connects it with the stub
// generated by flutter_rust_bridge_codegen.

import 'dart:ffi';
import 'bridge_generated.dart';

// Re-export the bridge so it is only necessary to import this file.
export 'bridge_generated.dart';
import 'dart:io' as io;

const _base = 'peripheral';

var hm = <String, String Function(String)>{
  'macos': (name) => 'lib$name.dylib',
  'linux': (name) => 'lib$name.so',
  'windows': (name) => '$name.dll'
};

// On MacOS, the dynamic library is not bundled with the binary,
// but rather directly **linked** against the binary.
final _dylib = io.Platform.isWindows
    ? '$_base.dll'
    : io.Platform.isMacOS
        ? 'lib$_base.dylib'
        : 'lib$_base.so';

// The late modifier delays initializing the value until it is actually needed,
// leaving precious little time for the program to quickly start up.
final Peripheral peripheral = PeripheralImpl(
    io.Platform.isIOS || io.Platform.isMacOS
        ? DynamicLibrary.executable()
        : DynamicLibrary.open(_dylib));
